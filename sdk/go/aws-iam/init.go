// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awsiam

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws-iam/sdk/go/aws-iam/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws-iam:index:Account":
		r = &Account{}
	case "aws-iam:index:AssumableRole":
		r = &AssumableRole{}
	case "aws-iam:index:AssumableRoleWithOIDC":
		r = &AssumableRoleWithOIDC{}
	case "aws-iam:index:AssumableRoleWithSAML":
		r = &AssumableRoleWithSAML{}
	case "aws-iam:index:AssumableRoles":
		r = &AssumableRoles{}
	case "aws-iam:index:AssumableRolesWithSAML":
		r = &AssumableRolesWithSAML{}
	case "aws-iam:index:EKSRole":
		r = &EKSRole{}
	case "aws-iam:index:GroupWithAssumableRolesPolicy":
		r = &GroupWithAssumableRolesPolicy{}
	case "aws-iam:index:GroupWithPolicies":
		r = &GroupWithPolicies{}
	case "aws-iam:index:Policy":
		r = &Policy{}
	case "aws-iam:index:ReadOnlyPolicy":
		r = &ReadOnlyPolicy{}
	case "aws-iam:index:RoleForServiceAccountsEks":
		r = &RoleForServiceAccountsEks{}
	case "aws-iam:index:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:aws-iam" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws-iam",
		"index",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"aws-iam",
		&pkg{version},
	)
}
