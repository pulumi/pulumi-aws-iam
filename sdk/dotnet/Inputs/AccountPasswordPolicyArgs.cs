// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsIam.Inputs
{

    /// <summary>
    /// Options to specify complexity requirements and mandatory rotation periods for your IAM users' passwords.
    /// </summary>
    public sealed class AccountPasswordPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to allow users to change their own password.
        /// </summary>
        [Input("allowUsersToChange", required: true)]
        public Input<bool> AllowUsersToChange { get; set; } = null!;

        /// <summary>
        /// Whether users are prevented from setting a new password after their password has
        /// expired (i.e. require administrator reset).
        /// </summary>
        [Input("hardExpiry", required: true)]
        public Input<bool> HardExpiry { get; set; } = null!;

        /// <summary>
        /// The number of days that an user password is valid. If not set or a value of `0` is provided, then
        /// passwords will not expire.
        /// </summary>
        [Input("maxAge")]
        public Input<int>? MaxAge { get; set; }

        /// <summary>
        /// Minimum length to require for user passwords. Defaults to `8` if not set or
        /// the provided value is invalid. Valid values are between 6 and 128.
        /// </summary>
        [Input("minimumLength")]
        public Input<int>? MinimumLength { get; set; }

        /// <summary>
        /// Whether to require lowercase characters for user passwords.
        /// </summary>
        [Input("requireLowercaseCharacters", required: true)]
        public Input<bool> RequireLowercaseCharacters { get; set; } = null!;

        /// <summary>
        /// Whether to require numbers for user passwords.
        /// </summary>
        [Input("requireNumbers", required: true)]
        public Input<bool> RequireNumbers { get; set; } = null!;

        /// <summary>
        /// Whether to require symbols for user passwords.
        /// </summary>
        [Input("requireSymbols", required: true)]
        public Input<bool> RequireSymbols { get; set; } = null!;

        /// <summary>
        /// Whether to require uppercase characters for user passwords.
        /// </summary>
        [Input("requireUppercaseCharacters", required: true)]
        public Input<bool> RequireUppercaseCharacters { get; set; } = null!;

        /// <summary>
        /// The number of previous passwords that users are prevented from reusing. If not set or a
        /// value of `0` is provided, no reuse prevention policy will be used.
        /// </summary>
        [Input("reusePrevention")]
        public Input<int>? ReusePrevention { get; set; }

        public AccountPasswordPolicyArgs()
        {
        }
        public static new AccountPasswordPolicyArgs Empty => new AccountPasswordPolicyArgs();
    }
}
